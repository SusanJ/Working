package org.dotlessbraille.transtables;
import java.util.HashMap;

 /** Words that can use shortforms as part-word
     contractions per Appendix 1 in the UEB print
     Rulebook and corresponding braille from
     the braille verison of the Rulebook.

     Many of the words contain other contractions
     which would need to be cross-referenced to
     support a learner or grade-relaxed braille
     option.

     (Generated by cutting and pasting and then
      using some custom software I wrote and then
      manually adjusting for use of " and \
      in ASCII Braille.) (Two duplicates commented
      out.)

      TO-DO Support the following rule from App. 1
      "When an "s" or apostrophe "s" is added to any
      word on the list, use the shortform with the
      following three exceptions:
        abouts ab\ts
        almosts almo/s
        hims hims
 */
public class App1Word{
 public static final App1Word[] app1Words = {
   new App1Word( "aboutface",   "ABFACE" ),         //1
   new App1Word( "aboutfaced",  "ABFAC$",  "$" ),   //2
   new App1Word( "aboutfacer",  "ABFAC]",  "]" ),   //3
   new App1Word( "aboutfacing", "ABFAC+", "+" ),    //4
   new App1Word( "aboutturn",   "ABTURN" ),         //5
   new App1Word( "aboutturned", "ABTURN$", "$" ),   //6
   new App1Word( "eastabout",   "EA/AB", "/" ),     //7
   new App1Word( "gadabout",    "GADAB" ),          //8
   new App1Word( "hereabout",   "\"HAB", "\"H"  ),  //9
   new App1Word( "knockabout",  "KNOCKAB" ),        //10
   new App1Word( "layabout",    "LAYAB" ),          //11
   new App1Word( "northabout", "NOR?AB", "?" ),     //12
   new App1Word( "rightabout", "\"RAB", "\"R" ),    //13
   new App1Word( "roundabout", "R.DAB", ".D" ),    //14
   new App1Word( "roustabout", "R\\/AB" ),  //15
   new App1Word( "runabout", "RUNAB" ),  //16
   new App1Word( "southabout", "S\\?AB" ),  //17
   new App1Word( "stirabout", "/IRAB" ),  //18
   new App1Word( "thereabout", "\"!AB" ),  //19
   new App1Word( "turnabout", "TURNAB" ),  //20
   new App1Word( "walkabout", "WALKAB" ),  //21
   new App1Word( "westabout", "WE/AB" ),  //22
   new App1Word( "whereabout", "\":AB" ),  //23
   new App1Word( "aboveboard", "ABVBO>D" ),  //24
   new App1Word( "aboveground", "ABVGR.D" ),  //25
   new App1Word( "abovementioned", "ABVM5;N$" ),  //26
   new App1Word( "hereinabove", "\"H9ABV" ),  //27
   new App1Word( "accordingly", "ACLY" ),  //28
   new App1Word( "unaccording", "UNAC" ),  //29
   new App1Word( "unaccordingly", "UNACLY" ),  //30
   new App1Word( "readacross", "R1DACR" ),  //31
   new App1Word( "afterbattle", "AFBATTLE" ),  //32
   new App1Word( "afterbirth", "AFBIR?" ),  //33
   new App1Word( "afterbreakfast", "AFBR1KFA/" ),  //34
   new App1Word( "afterburn", "AFBURN" ),  //35
   new App1Word( "afterburned", "AFBURN$" ),  //36
   new App1Word( "afterburner", "AFBURN]" ),  //37
   new App1Word( "afterburning", "AFBURN+" ),  //38
   new App1Word( "aftercare", "AFC>E" ),  //39
   new App1Word( "afterclap", "AFCLAP" ),  //40
   new App1Word( "aftercoffee", "AFC(FEE" ),  //41
   new App1Word( "afterdamp", "AFDAMP" ),  //42
   new App1Word( "afterdark", "AFD>K" ),  //43
   new App1Word( "afterdeck", "AFDECK" ),  //44
   new App1Word( "afterdinner", "AFD9N]" ),  //45
   new App1Word( "afterflow", "AFFL[" ),  //46
   new App1Word( "aftergame", "AFGAME" ),  //47
   new App1Word( "afterglow", "AFGL[" ),  //48
   new App1Word( "afterguard", "AFGU>D" ),  //49
   new App1Word( "afterhatch", "AFHAT*" ),  //50
   new App1Word( "afterhatches", "AFHAT*ES" ),  //51
   new App1Word( "afterhour", "AFH\\R" ),  //52
   new App1Word( "afterlife", "AFLIFE" ),  //53
   new App1Word( "afterlight", "AFLI<T" ),  //54
   new App1Word( "afterlives", "AFLIVES" ),  //55
   new App1Word( "afterlunch", "AFLUN*" ),  //56
   new App1Word( "afterlunches", "AFLUN*ES" ),  //57
   new App1Word( "aftermarket", "AFM>KET" ),  //58
   new App1Word( "aftermatch", "AFMAT*" ),  //59
   new App1Word( "aftermatches", "AFMAT*ES" ),  //60
   new App1Word( "aftermath", "AFMA?" ),  //61
   new App1Word( "aftermeeting", "AFMEET+" ),  //62
   new App1Word( "aftermidday", "AFMID\"D" ),  //63
   new App1Word( "aftermidnight", "AFMIDNI<T" ),  //64
   new App1Word( "aftermost", "AFMO/" ),  //65
   new App1Word( "afterpain", "AFPA9" ),  //66
   new App1Word( "afterparties", "AF\"PIES" ),  //67
   new App1Word( "afterparty", "AF\"PY" ),  //68
   new App1Word( "afterpiece", "AFPIECE" ),  //69
   new App1Word( "afterplay", "AFPLAY" ),  //70
   new App1Word( "aftersale", "AFSALE" ),  //71
   new App1Word( "afterschool", "AFS*OOL" ),  //72
   new App1Word( "aftersensation", "AFS5SA;N" ),  //73
   new App1Word( "aftershave", "AF%AVE" ),  //74
   new App1Word( "aftershock", "AF%OCK" ),  //75
   new App1Word( "aftershow", "AF%[" ),  //76
   new App1Word( "aftershower", "AF%[]" ),  //77
   new App1Word( "aftersupper", "AFSUPP]" ),  //78
   new App1Word( "aftertaste", "AFTA/E" ),  //79
   new App1Word( "aftertax", "AFTAX" ),  //80
   new App1Word( "aftertaxes", "AFTAXES" ),  //81
   new App1Word( "aftertea", "AFTEA" ),  //82
   new App1Word( "aftertheatre", "AF!ATRE" ),  //83
   new App1Word( "afterthought", "AF?\\" ),  //84
   new App1Word( "aftertime", "AF\"T" ),  //85
   new App1Word( "aftertreatment", "AFTR1T;T" ),  //86
   new App1Word( "afterword", "AF^W" ),  //87
   new App1Word( "afterwork", "AF\"W" ),  //88
   new App1Word( "afterworld", "AF_W" ),  //89
   new App1Word( "hereafter", "\"HAF" ),  //90
   new App1Word( "hereinafter", "\"H9AF" ),  //91
   new App1Word( "morningafter", "MORN+AF" ),  //92
   new App1Word( "thereafter", "\"!AF" ),  //93
   new App1Word( "thereinafter", "\"!9AF" ),  //94
   new App1Word( "whereafter", "\":AF" ),  //95
   new App1Word( "whereinafter", "\":9AF" ),  //96
   new App1Word( "afternoontea", "AFNTEA" ),  //97
   new App1Word( "goodafternoon", "GDAFN" ),  //98
   new App1Word( "midafternoon", "MIDAFN" ),  //99
   new App1Word( "hereagain", "\"HAG" ),  //100
   new App1Word( "hereinagain", "\"H9AG" ),  //101
   new App1Word( "thereagain", "\"!AG" ),  //102
   new App1Word( "thereinagain", "\"!9AG" ),  //103
   new App1Word( "whereagain", "\":AG" ),  //104
   new App1Word( "whereinagain", "\":9AG" ),  //105
   new App1Word( "hereagainst", "\"HAG/" ),  //106
   new App1Word( "thereagainst", "\"!AG/" ),  //107
   new App1Word( "whereagainst", "\":AG/" ),  //108
   new App1Word( "beforehand", "2FH&" ),  //109
   new App1Word( "behindhand", "2HH&" ),  //110
   new App1Word( "belowdeck", "2LDECK" ),  //111
   new App1Word( "belowground", "2LGR.D" ),  //112
   new App1Word( "belowmentioned", "2LM5;N$" ),  //113
   new App1Word( "beneathdeck", "2NDECK" ),  //114
   new App1Word( "beneathground", "2NGR.D" ),  //115
   new App1Word( "betweendeck", "2TDECK" ),  //116
   new App1Word( "betweentime", "2T\"T" ),  //117
   new App1Word( "betweenwhile", "2T>ILE" ),  //118
   new App1Word( "blindfish", "BLFI%" ),  //119
   new App1Word( "blindfishes", "BLFI%ES" ),  //120
   new App1Word( "blindfold", "BLFOLD" ),  //121
   new App1Word( "blindfolded", "BLFOLD$" ),  //122
   new App1Word( "blindfolder", "BLFOLD]" ),  //123
   new App1Word( "blindfolding", "BLFOLD+" ),  //124
   new App1Word( "blindly", "BLLY" ),  //125
   new App1Word( "blindman", "BLMAN" ),  //126
   new App1Word( "blindmen", "BLM5" ),  //127
   new App1Word( "blindness", "BL;S" ),  //128
   new App1Word( "blindnesses", "BL;SES" ),  //129
   new App1Word( "blindside", "BLSIDE" ),  //130
   new App1Word( "blindsided", "BLSID$" ),  //131
   new App1Word( "blindsider", "BLSID]" ),  //132
   new App1Word( "blindsiding", "BLSID+" ),  //133
   new App1Word( "blindsight", "BLSI<T" ),  //134
   new App1Word( "blindstories", "BL/ORIES" ),  //135
   new App1Word( "blindstory", "BL/ORY" ),  //136
   new App1Word( "blindworm", "BLWORM" ),  //137
   new App1Word( "colorblind", "COLORBL" ),  //138
   new App1Word( "colorblindness", "COLORBL;S" ),  //139
   new App1Word( "colorblindnesses", "COLORBL;SES" ),  //140
   new App1Word( "colourblind", "COL\\RBL" ),  //141
   new App1Word( "colourblindness", "COL\\RBL;S" ),  //142
   new App1Word( "colourblindnesses", "COL\\RBL;SES" ),  //143
   new App1Word( "deafblind", "D1FBL" ),  //144
   new App1Word( "deafblindness", "D1FBL;S" ),  //145
   new App1Word( "deafblindnesses", "D1FBL;SES" ),  //146
   new App1Word( "purblind", "PURBL" ),  //147
   new App1Word( "purblindly", "PURBLLY" ),  //148
   new App1Word( "purblindness", "PURBL;S" ),  //149
   new App1Word( "purblindnesses", "PURBL;SES" ),  //150
   new App1Word( "snowblind", "SN[BL" ),  //151
   new App1Word( "snowblindness", "SN[BL;S" ),  //152
   new App1Word( "snowblindnesses", "SN[BL;SES" ),  //153
   new App1Word( "unblindfold", "UNBLFOLD" ),  //154
   new App1Word( "unblindfolded", "UNBLFOLD$" ),  //155
   new App1Word( "unblindfolding", "UNBLFOLD+" ),  //156
   new App1Word( "brailled", "BRLD" ),  //157
   new App1Word( "brailler", "BRLR" ),  //158
   new App1Word( "braillewriter", "BRLWRIT]" ),  //159
   new App1Word( "braillewriting", "BRLWRIT+" ),  //160
   new App1Word( "brailley", "BRLY" ),  //161
   new App1Word( "misbraille", "MISBRL" ),  //162
   new App1Word( "misbrailled", "MISBRLD" ),  //163
   new App1Word( "rebraille", "REBRL" ),  //164
   new App1Word( "rebrailled", "REBRLD" ),  //165
   new App1Word( "rebrailler", "REBRLR" ),  //166
   new App1Word( "unbraille", "UNBRL" ),  //167
   new App1Word( "unbrailled", "UNBRLD" ),  //168
   new App1Word( "children'swear", "*N'SWE>" ),  //169
   new App1Word( "brainchildren", "BRA9*N" ),  //170
   new App1Word( "fosterchildren", "FO/]*N" ),  //171
   new App1Word( "godchildren", "GOD*N" ),  //172
   new App1Word( "grandchildren", "GR&*N" ),  //173
   //new App1Word( "greatgrandchildren", "GRTGR&*N" ),  //174
   new App1Word( "lovechildren", "LOVE*N" ),  //175
   new App1Word( "schoolchildren", "S*OOL*N" ),  //176
   new App1Word( "stepchildren", "/EP*N" ),  //177
   new App1Word( "conceived", "3CVD" ),  //178
   new App1Word( "conceiver", "3CVR" ),  //179
   new App1Word( "could've", "CD'VE" ),  //180
   new App1Word( "coulda", "CDA" ),  //181
   new App1Word( "couldest", "CDE/" ),  //182
   new App1Word( "couldn't", "CDN'T" ),  //183
   new App1Word( "couldn't've", "CDN'T'VE" ),  //184
   new App1Word( "couldst", "CD/" ),  //185
   new App1Word( "deceived", "DCVD" ),  //186
   new App1Word( "deceiver", "DCVR" ),  //187
   new App1Word( "archdeceiver", ">*DCVR" ),  //188
   new App1Word( "undeceive", "UNDCV" ),  //189
   new App1Word( "undeceived", "UNDCVD" ),  //190
   new App1Word( "undeceiver", "UNDCVR" ),  //191
   new App1Word( "undeceiving", "UNDCVG" ),  //192
   new App1Word( "declared", "DCLD" ),  //193
   new App1Word( "declarer", "DCLR" ),  //194
   new App1Word( "undeclare", "UNDCL" ),  //195
   new App1Word( "undeclared", "UNDCLD" ),  //196
   new App1Word( "firstaid", "F/AID" ),  //197
   new App1Word( "firstaider", "F/AID]" ),  //198
   new App1Word( "firstborn", "F/BORN" ),  //199
   new App1Word( "firstclass", "F/CLASS" ),  //200
   new App1Word( "firstclasses", "F/CLASSES" ),  //201
   new App1Word( "firstday", "F/\"D" ),  //202
   new App1Word( "firstdayer", "F/\"D]" ),  //203
   new App1Word( "firstfruit", "F/FRUIT" ),  //204
   new App1Word( "firstfruiting", "F/FRUIT+" ),  //205
   new App1Word( "firstgeneration", "F/G5]A;N" ),  //206
   new App1Word( "firsthand", "F/H&" ),  //207
   new App1Word( "firsthanded", "F/H&$" ),  //208
   new App1Word( "firstling", "F/L+" ),  //209
   new App1Word( "firstly", "F/LY" ),  //210
   new App1Word( "firstness", "F/;S" ),  //211
   new App1Word( "firstnight", "F/NI<T" ),  //212
   new App1Word( "firstnighter", "F/NI<T]" ),  //213
   new App1Word( "firstrate", "F/RATE" ),  //214
   new App1Word( "firstrated", "F/RAT$" ),  //215
   new App1Word( "firstrating", "F/RAT+" ),  //216
   new App1Word( "fFirststring", "F//R+" ),  //217
   new App1Word( "feetfirst", "FEETF/" ),  //218
   new App1Word( "headfirst", "H1DF/" ),  //219
   new App1Word( "tailfirst", "TAILF/" ),  //220
   new App1Word( "friendless", "FR.S" ),  //221
   new App1Word( "friendlessness", "FR.S;S" ),  //222
   new App1Word( "friendlessnesses", "FR.S;SES" ),  //223
   new App1Word( "friendlier", "FRLI]" ),  //224
   new App1Word( "friendlies", "FRLIES" ),  //225
   new App1Word( "friendliest", "FRLIE/" ),  //226
   new App1Word( "friendliness", "FRLI;S" ),  //227
   new App1Word( "friendlinesses", "FRLI;SES" ),  //228
   new App1Word( "friendly", "FRLY" ),  //229
   new App1Word( "friendship", "FR%IP" ),  //230
   new App1Word( "befriend", "2FR" ),  //231
   new App1Word( "boyfriend", "BOYFR" ),  //232
   new App1Word( "Defriend", "DEFR" ),  //233
   new App1Word( "galfriend", "GALFR" ),  //234
   new App1Word( "gentlemanfriend", "G5TLEMANFR" ),  //235
   new App1Word( "gentlemenfriends", "G5TLEM5FRS" ),  //236
   new App1Word( "girlfriend", "GIRLFR" ),  //237
   new App1Word( "guyfriend", "GUYFR" ),  //238
   new App1Word( "ladyfriend", "LADYFR" ),  //239
   new App1Word( "manfriend", "MANFR" ),  //240
   new App1Word( "menfriends", "M5FRS" ),  //241
   new App1Word( "penfriend", "P5FR" ),  //242
   new App1Word( "schoolfriend", "S*OOLFR" ),  //243
   new App1Word( "unfriend", "UNFR" ),  //244
   new App1Word( "unfriendlier", "UNFRLI]" ),  //245
   new App1Word( "unfriendliest", "UNFRLIE/" ),  //246
   new App1Word( "unfriendliness", "UNFRLI;S" ),  //247
   new App1Word( "unfriendlinesses", "UNFRLI;SES" ),  //248
   new App1Word( "unfriendly", "UNFRLY" ),  //249
   new App1Word( "womanfriend", "WOMANFR" ),  //250
   new App1Word( "womenfriends", "WOM5FRS" ),  //251
   //new App1Word( "goodafternoon", "GDAFN" ),  //252
   new App1Word( "goodby", "GDBY" ),  //253
   new App1Word( "goodbye", "GDBYE" ),  //254
   new App1Word( "goodbyeing", "GDBYE+" ),  //255
   new App1Word( "goodbying", "GDBY+" ),  //256
   new App1Word( "goodday", "GD\"D" ),  //257
   new App1Word( "gooder", "GD]" ),  //258
   new App1Word( "goodest", "GDE/" ),  //259
   new App1Word( "goodevening", "GDEV5+" ),  //260
   new App1Word( "goodfellow", "GDFELL[" ),  //261
   new App1Word( "goodfellowship", "GDFELL[%IP" ),  //262
   new App1Word( "goodhearted", "GDHE>T$" ),  //263
   new App1Word( "goodheartedly", "GDHE>T$LY" ),  //264
   new App1Word( "goodheartedness", "GDHE>T$;S" ),  //265
   new App1Word( "goodhumor", "GDHUMOR" ),  //266
   new App1Word( "goodhumored", "GDHUMOR$" ),  //267
   new App1Word( "goodhumoredly", "GDHUMOR$LY" ),  //268
   new App1Word( "goodhumoredness", "GDHUMOR$;S" ),  //269
   new App1Word( "goodhumorednesses", "GDHUMOR$;SES" ),  //270
   new App1Word( "goodhumour", "GDHUM\\R" ),  //271
   new App1Word( "goodhumoured", "GDHUM\\R$" ),  //272
   new App1Word( "goodhumouredly", "GDHUM\\R$LY" ),  //273
   new App1Word( "goodhumouredness", "GDHUM\\R$;S" ),  //274
   new App1Word( "goodhumourednesses", "GDHUM\\R$;SES" ),  //275
   new App1Word( "goodie", "GDIE" ),  //276
   new App1Word( "goodish", "GDI%" ),  //277
   new App1Word( "goodlier", "GDLI]" ),  //278
   new App1Word( "goodliest", "GDLIE/" ),  //279
   new App1Word( "goodliness", "GDLI;S" ),  //280
   new App1Word( "goodlook", "GDLOOK" ),  //281
   new App1Word( "goodlooker", "GDLOOK]" ),  //282
   new App1Word( "goodlooking", "GDLOOK+" ),  //283
   new App1Word( "goodly", "GDLY" ),  //284
   new App1Word( "goodman", "GDMAN" ),  //285
   new App1Word( "goodmen", "GDM5" ),  //286
   new App1Word( "goodmorning", "GDMORN+" ),  //287
   new App1Word( "goodnature", "GDNATURE" ),  //288
   new App1Word( "goodnatured", "GDNATUR$" ),  //289
   new App1Word( "goodnaturedly", "GDNATUR$LY" ),  //290
   new App1Word( "goodnaturedness", "GDNATUR$;S" ),  //291
   new App1Word( "goodness", "GD;S" ),  //292
   new App1Word( "goodnesses", "GD;SES" ),  //293
   new App1Word( "goodnight", "GDNI<T" ),  //294
   new App1Word( "goodsize", "GDSIZE" ),  //295
   new App1Word( "goodsized", "GDSIZ$" ),  //296
   new App1Word( "goodtempered", "GDTEMP]$" ),  //297
   new App1Word( "goodtemperedly", "GDTEMP]$LY" ),  //298
   new App1Word( "goodtime", "GD\"T" ),  //299
   new App1Word( "goodun", "GDUN" ),  //300
   new App1Word( "goodwife", "GDWIFE" ),  //301
   new App1Word( "goodwill", "GDWILL" ),  //302
   new App1Word( "goodwilled", "GDWILL$" ),  //303
   new App1Word( "goodwives", "GDWIVES" ),  //304
   new App1Word( "goody", "GDY" ),  //305
   new App1Word( "goodyear", "GDYE>" ),  //306
   new App1Word( "feelgood", "FEELGD" ),  //307
   new App1Word( "scattergood", "SCATT]GD" ),  //308
   new App1Word( "supergood", "SUP]GD" ),  //309
   new App1Word( "greataunt", "GRTAUNT" ),  //310
   new App1Word( "greatbatch", "GRTBAT*" ),  //311
   new App1Word( "greatcircle", "GRTCIRCLE" ),  //312
   new App1Word( "greatcoat", "GRTCOAT" ),  //313
   new App1Word( "greaten", "GRT5" ),  //314
   new App1Word( "greatened", "GRT5$" ),  //315
   new App1Word( "greatener", "GRT5]" ),  //316
   new App1Word( "greatening", "GRT5+" ),  //317
   new App1Word( "greater", "GRT]" ),  //318
   new App1Word( "greatest", "GRTE/" ),  //319
   new App1Word( "greatgrandaunt", "GRTGR&AUNT" ),  //320
   new App1Word( "greatgrandchild", "GRTGR&*ILD" ),  //321
   new App1Word( "greatgrandchildren", "GRTGR&*N" ),  //322
   new App1Word( "greatgranddad", "GRTGR&DAD" ),  //323
   new App1Word( "greatgranddaughter", "GRTGR&DAU<T]" ),  //324
   new App1Word( "greatgrandfather", "GRTGR&\"F" ),  //325
   new App1Word( "greatgrandfatherhood", "GRTGR&\"FHOOD" ),  //326
   new App1Word( "greatgrandma", "GRTGR&MA" ),  //327
   new App1Word( "greatgrandmother", "GRTGR&\"M" ),  //328
   new App1Word( "greatgrandmotherhood", "GRTGR&\"MHOOD" ),  //329
   new App1Word( "greatgrandnephew", "GRTGR&NEPHEW" ),  //330
   new App1Word( "greatgrandniece", "GRTGR&NIECE" ),  //331
   new App1Word( "greatgrandpa", "GRTGR&PA" ),  //332
   new App1Word( "greatgrandparent", "GRTGR&P>5T" ),  //333
   new App1Word( "greatgrandparenthood", "GRTGR&P>5THOOD" ),  //334
   new App1Word( "greatgrandson", "GRTGR&SON" ),  //335
   new App1Word( "greatgranduncle", "GRTGR&UNCLE" ),  //336
   new App1Word( "greathearted", "GRTHE>T$" ),  //337
   new App1Word( "greatheartedly", "GRTHE>T$LY" ),  //338
   new App1Word( "greatheartedness", "GRTHE>T$;S" ),  //339
   new App1Word( "greatheartednesses", "GRTHE>T$;SES" ),  //340
   new App1Word( "greatly", "GRTLY" ),  //341
   new App1Word( "greatnephew", "GRTNEPHEW" ),  //342
   new App1Word( "greatness", "GRT;S" ),  //343
   new App1Word( "greatnesses", "GRT;SES" ),  //344
   new App1Word( "greatniece", "GRTNIECE" ),  //345
   new App1Word( "greatsword", "GRTS^W" ),  //346
   new App1Word( "greatuncle", "GRTUNCLE" ),  //347
   new App1Word( "himbo", "HMBO" ),  //348
   new App1Word( "himboes", "HMBOES" ),  //349
   new App1Word( "immediately", "IMMLY" ),  //350
   new App1Word( "immediateness", "IMM;S" ),  //351
   new App1Word( "letterbomb", "LRBOMB" ),  //352
   new App1Word( "letterbombed", "LRBOMB$" ),  //353
   new App1Word( "letterbomber", "LRBOMB]" ),  //354
   new App1Word( "letterbombing", "LRBOMB+" ),  //355
   new App1Word( "letterbox", "LRBOX" ),  //356
   new App1Word( "letterboxed", "LRBOX$" ),  //357
   new App1Word( "letterboxer", "LRBOX]" ),  //358
   new App1Word( "letterboxes", "LRBOXES" ),  //359
   new App1Word( "letterboxing", "LRBOX+" ),  //360
   new App1Word( "letterbodies", "LRBODIES" ),  //361
   new App1Word( "letterbody", "LRBODY" ),  //362
   new App1Word( "lettered", "LR$" ),  //363
   new App1Word( "letterer", "LR]" ),  //364
   new App1Word( "letterform", "LR=M" ),  //365
   new App1Word( "letterhead", "LRH1D" ),  //366
   new App1Word( "letterheading", "LRH1D+" ),  //367
   new App1Word( "lettering", "LR+" ),  //368
   new App1Word( "letterman", "LRMAN" ),  //369
   new App1Word( "lettermen", "LRM5" ),  //370
   new App1Word( "letteropener", "LROP5]" ),  //371
   new App1Word( "letterperfect", "LRP]FECT" ),  //372
   new App1Word( "letterpress", "LRPRESS" ),  //373
   new App1Word( "letterpressed", "LRPRESS$" ),  //374
   new App1Word( "letterpresses", "LRPRESSES" ),  //375
   new App1Word( "letterpressing", "LRPRESS+" ),  //376
   new App1Word( "letterquality", "LRQUAL;Y" ),  //377
   new App1Word( "letterspace", "LRSPACE" ),  //378
   new App1Word( "letterspaced", "LRSPAC$" ),  //379
   new App1Word( "letterspacing", "LRSPAC+" ),  //380
   new App1Word( "lettertext", "LRTEXT" ),  //381
   new App1Word( "bloodletter", "BLOODLR" ),  //382
   new App1Word( "chainletter", "*A9LR" ),  //383
   new App1Word( "hateletter", "HATELR" ),  //384
   new App1Word( "loveletter", "LOVELR" ),  //385
   new App1Word( "newsletter", "NEWSLR" ),  //386
   new App1Word( "reletter", "RELR" ),  //387
   new App1Word( "relettered", "RELR$" ),  //388
   new App1Word( "relettering", "RELR+" ),  //389
   new App1Word( "unlettered", "UNLR$" ),  //390
   new App1Word( "littled", "LLD" ),  //391
   new App1Word( "littleneck", "LLNECK" ),  //392
   new App1Word( "littleness", "LL;S" ),  //393
   new App1Word( "littlenesses", "LL;SES" ),  //394
   new App1Word( "littler", "LLR" ),  //395
   new App1Word( "littlest", "LL/" ),  //396
   new App1Word( "belittle", "2LL" ),  //397
   new App1Word( "belittled", "2LLD" ),  //398
   new App1Word( "belittlement", "2LL;T" ),  //399
   new App1Word( "belittler", "2LLR" ),  //400
   new App1Word( "muchly", "M*LY" ),  //401
   new App1Word( "muchness", "M*;S" ),  //402
   new App1Word( "forasmuch", "=ASM*" ),  //403
   new App1Word( "inasmuch", "9ASM*" ),  //404
   new App1Word( "insomuch", "9SOM*" ),  //405
   new App1Word( "overmuch", "OV]M*" ),  //406
   new App1Word( "must've", "M/'VE" ),  //407
   new App1Word( "musta", "M/A" ),  //408
   new App1Word( "mustard", "M/>D" ),  //409
   new App1Word( "mustier", "M/I]" ),  //410
   new App1Word( "mustiest", "M/IE/" ),  //411
   new App1Word( "mustily", "M/ILY" ),  //412
   new App1Word( "mustiness", "M/I;S" ),  //413
   new App1Word( "mustn't", "M/N'T" ),  //414
   new App1Word( "mustn't've", "M/N'T'VE" ),  //415
   new App1Word( "musty", "M/Y" ),  //416
   new App1Word( "unnecessary", "UNNEC" ),  //417
   new App1Word( "highlypaid", "HI<LYPD" ),  //418
   new App1Word( "illpaid", "ILLPD" ),  //419
   new App1Word( "lowlypaid", "L[LYPD" ),  //420
   new App1Word( "overpaid", "OV]PD" ),  //421
   new App1Word( "poorlypaid", "POORLYPD" ),  //422
   new App1Word( "postpaid", "PO/PD" ),  //423
   new App1Word( "prepaid", "PREPD" ),  //424
   new App1Word( "repaid", "REPD" ),  //425
   new App1Word( "underpaid", "\"UPD" ),  //426
   new App1Word( "unpaid", "UNPD" ),  //427
   new App1Word( "wellpaid", "WELLPD" ),  //428
   new App1Word( "perceived", "P]CVD" ),  //429
   new App1Word( "perceiver", "P]CVR" ),  //430
   new App1Word( "apperceive", "APP]CV" ),  //431
   new App1Word( "apperceived", "APP]CVD" ),  //432
   new App1Word( "apperceiver", "APP]CVR" ),  //433
   new App1Word( "misperceive", "MISP]CV" ),  //434
   new App1Word( "misperceived", "MISP]CVD" ),  //435
   new App1Word( "misperceiver", "MISP]CVR" ),  //436
   new App1Word( "unperceive", "UNP]CV" ),  //437
   new App1Word( "unperceived", "UNP]CVD" ),  //438
   new App1Word( "apperceiving", "APP]CVG" ),  //439
   new App1Word( "misperceiving", "MISP]CVG" ),  //440
   new App1Word( "unperceiving", "UNP]CVG" ),  //441
   new App1Word( "perhapses", "P]HES" ),  //442
   new App1Word( "quickdraw", "QKDRAW" ),  //443
   new App1Word( "quicken", "QK5" ),  //444
   new App1Word( "quickened", "QK5$" ),  //445
   new App1Word( "quickener", "QK5]" ),  //446
   new App1Word( "quickening", "QK5+" ),  //447
   new App1Word( "quicker", "QK]" ),  //448
   new App1Word( "quickest", "QKE/" ),  //449
   new App1Word( "quickfire", "QKFIRE" ),  //450
   new App1Word( "quickfiring", "QKFIR+" ),  //451
   new App1Word( "quickfreeze", "QKFREEZE" ),  //452
   new App1Word( "quickfreezing", "QKFREEZ+" ),  //453
   new App1Word( "quickfroze", "QKFROZE" ),  //454
   new App1Word( "quickfrozen", "QKFROZ5" ),  //455
   new App1Word( "quickie", "QKIE" ),  //456
   new App1Word( "quickish", "QKI%" ),  //457
   new App1Word( "quickishly", "QKI%LY" ),  //458
   new App1Word( "quicklime", "QKLIME" ),  //459
   new App1Word( "quickly", "QKLY" ),  //460
   new App1Word( "quickness", "QK;S" ),  //461
   new App1Word( "quicknesses", "QK;SES" ),  //462
   new App1Word( "quicksand", "QKS&" ),  //463
   new App1Word( "quickset", "QKSET" ),  //464
   new App1Word( "quicksilver", "QKSILV]" ),  //465
   new App1Word( "quicksilvered", "QKSILV]$" ),  //466
   new App1Word( "quicksilvering", "QKSILV]+" ),  //467
   new App1Word( "quicksnap", "QKSNAP" ),  //468
   new App1Word( "quickstep", "QK/EP" ),  //469
   new App1Word( "quickstepped", "QK/EPP$" ),  //470
   new App1Word( "quickstepper", "QK/EPP]" ),  //471
   new App1Word( "quickstepping", "QK/EPP+" ),  //472
   new App1Word( "quicktempered", "QKTEMP]$" ),  //473
   new App1Word( "quicktime", "QK\"T" ),  //474
   new App1Word( "quickwitted", "QKWITT$" ),  //475
   new App1Word( "quickwittedly", "QKWITT$LY" ),  //476
   new App1Word( "quickwittedness", "QKWITT$;S" ),  //477
   new App1Word( "quicky", "QKY" ),  //478
   new App1Word( "doublequick", "D\\BLEQK" ),  //479
   new App1Word( "superquick", "SUP]QK" ),  //480
   new App1Word( "unquick", "UNQK" ),  //481
   new App1Word( "received", "RCVD" ),  //482
   new App1Word( "receiver", "RCVR" ),  //483
   new App1Word( "receivership", "RCVR%IP" ),  //484
   new App1Word( "preceive", "PRCV" ),  //485
   new App1Word( "preceiver", "PRCVR" ),  //486
   new App1Word( "unreceived", "UNRCVD" ),  //487
   new App1Word( "preceiving", "PRCVG" ),  //488
   new App1Word( "rejoiced", "RJCD" ),  //489
   new App1Word( "rejoiceful", "RJC;L" ),  //490
   new App1Word( "rejoicefully", "RJC;LLY" ),  //491
   new App1Word( "rejoicefulness", "RJC;L;S" ),  //492
   new App1Word( "rejoicer", "RJCR" ),  //493
   new App1Word( "unrejoice", "UNRJC" ),  //494
   new App1Word( "unrejoiced", "UNRJCD" ),  //495
   new App1Word( "unrejoicer", "UNRJCR" ),  //496
   new App1Word( "unrejoiceful", "UNRJC;L" ),  //497
   new App1Word( "unrejoicefully", "UNRJC;LLY" ),  //498
   new App1Word( "unrejoicefulness", "UNRJC;L;S" ),  //499
   new App1Word( "rejoicingly", "RJCGLY" ),  //500
   new App1Word( "unrejoicing", "UNRJCG" ),  //501
   new App1Word( "unrejoicingly", "UNRJCGLY" ),  //502
   new App1Word( "saidest", "SDE/" ),  //503
   new App1Word( "saidst", "SD/" ),  //504
   new App1Word( "aforesaid", "A=ESD" ),  //505
   new App1Word( "foresaid", "=ESD" ),  //506
   new App1Word( "gainsaid", "GA9SD" ),  //507
   new App1Word( "missaid", "MISSD" ),  //508
   new App1Word( "should've", "%D'VE" ),  //509
   new App1Word( "shoulda", "%DA" ),  //510
   new App1Word( "shouldest", "%DE/" ),  //511
   new App1Word( "shouldn't", "%DN'T" ),  //512
   new App1Word( "shouldn't've", "%DN'T'VE" ),  //513
   new App1Word( "shouldst", "%D/" ),  //514
   new App1Word( "suchlike", "S*LIKE" ),  //515
   new App1Word( "nonesuch", "N\"OS*" ),  //516
   new App1Word( "nonsuch", "NONS*" ),  //517
   new App1Word( "somesuch", "\"SS*" ),  //518
   new App1Word( "Togetherness", "TGR;S" ),  //519
   new App1Word( "would've", "WD'VE" ),  //520
   new App1Word( "woulda", "WDA" ),  //521
   new App1Word( "wouldest", "WDE/" ),  //522
   new App1Word( "wouldn't", "WDN'T" ),  //523
   new App1Word( "wouldn't've", "WDN'T'VE" ),  //524
   new App1Word( "wouldst", "WD/" ),  //525
   new App1Word( "'twould", "'TWD" ),  //526
   new App1Word( "'twould've", "'TWD'VE" ),  //527
   new App1Word( "'twoulda", "'TWDA" ),  //528
   new App1Word( "'twouldn't", "'TWDN'T" ),  //529
   new App1Word( "'twouldn't've", "'TWDN'T'VE" ),  //530
   new App1Word( "do-it-yourselfer", "D-X-YRF]" )  //531
 };

 static HashMap <String, App1Word> sfUseCon2Ink =
    new HashMap<String, App1Word>();
 static HashMap <String, App1Word> ink2sfUseCon =
    new HashMap<String, App1Word>();

  String ink;
  String brlUCaBrl;
  String brl;
  String con;

 public App1Word( String ink, String brl){
  this.ink = ink;
  this.brlUCaBrl = brl;
  this.brl = brlUCaBrl.toLowerCase();
 }
 public App1Word( String ink, String brl, String con){
  this.ink = ink;
  this.brlUCaBrl = brl;
  this.brl = brlUCaBrl.toLowerCase();
 }
public String getInk(){
 return ink;
}
public String getBrl(){
 return brl;
}
   //Hash tables for forward  and backtranslation.
public static void makeApp1Table( boolean report, boolean display){
 for (int ap1 = 0; ap1 < app1Words.length; ap1++){
  App1Word app1Word = app1Words[ap1];
  if (sfUseCon2Ink.containsKey( app1Word.getBrl())) {
    System.out.println( "Repeated Key: "+app1Word.getBrl() );
  }
  sfUseCon2Ink.put( app1Word.getBrl(), app1Word );
  ink2sfUseCon.put( app1Word.getInk(), app1Word );
 }
 if (report){
  int cnt = ink2sfUseCon.size();
  System.out.println( "     Words Using Shortforms Table complete. (" +
           cnt+")" );
 }
} 
public static String getApp14Brl( String brl ){
 App1Word ap1 = sfUseCon2Ink.get( brl.toLowerCase() );
 if (ap1 == null) return (String) null;
 return ap1.getInk();
}
public static String getUEBapp1( String ink ){
 App1Word ap1 = ink2sfUseCon.get( ink );
 if (ap1 == null) return (String) null;
 return ap1.getBrl();
} 
}//End Class App1Word.
